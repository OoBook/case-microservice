version: '3.8'
services:
  main_db:
    image: 'mariadb:latest'
    environment:
      MYSQL_DATABASE: main
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./storage/dbdata/main:/var/lib/mysql
    ports:
      - 33063:3306
    networks:
      - mynet
  library_db:
    image: 'mariadb:latest'
    environment:
      MYSQL_DATABASE: library
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./storage/dbdata/library:/var/lib/mysql
    ports:
      - 33064:3306
    networks:
      - mynet
  phpmyadmin:
    image: 'phpmyadmin:latest'
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
    networks:
      - mynet
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./storage/mongodb/db:/data/db
      - ./storage/mongodb/dev.archive:/Databases/dev.archive
      - ./storage/mongodb/production:/Databases/production
    networks:
      - mynet
  mongo-webui:
    image: mongoclient/mongoclient
    environment:
      - ROOT_URL=http://localhost
      - MONGO_URL=mongodb://mongo:27017/
      - INSTALL_MONGO=false
    volumes:
      - ./storage/mongo-webui:/data/db
    ports:
      - "3000:3000"
    networks:
      - mynet
    depends_on:
      - mongo
  enrich:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    # ports:
    #   - 80:8080
    networks:
      - mynet
    depends_on:
      - main_db
      - library_db
      - mongo
  nginx:
    image: nginx:alpine
    container_name: nginx
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
    networks:
      - mynet
networks:
  mynet:
    driver: bridge